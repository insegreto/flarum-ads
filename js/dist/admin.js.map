{"version":3,"sources":["webpack://@malago/flarum-ads/webpack/bootstrap","webpack://@malago/flarum-ads/external \"flarum.core.compat['app']\"","webpack://@malago/flarum-ads/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@malago/flarum-ads/external \"flarum.core.compat['utils/withAttr']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['utils/Stream']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['components/Switch']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['components/Button']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@malago/flarum-ads/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@malago/flarum-ads/./src/admin/components/AdsPage.js","webpack://@malago/flarum-ads/./src/admin/index.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","exports","flarum","core","compat","_inheritsLoose","subClass","superClass","create","constructor","__proto__","UploadPage","oninit","vnode","settings","app","data","this","values","settingsPrefix","positions","properties","forEach","Stream","addPrefix","Number","content","m","className","onsubmit","translator","trans","Switch","component","state","onchange","placeholder","oninput","withAttr","type","map","position","Button","disabled","changed","positionsChecked","some","propertiesChecked","settingsChecked","e","preventDefault","loading","alerts","dismiss","successAlert","saveSettings","then","show","window","location","reload","ExtensionPage","initializers","add","extensionData","registerPage","AdsPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = flarum.core.compat['app'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['utils/withAttr'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","import ExtensionPage from 'flarum/components/ExtensionPage';\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\nimport Button from \"flarum/components/Button\";\nimport saveSettings from \"flarum/utils/saveSettings\";\nimport Stream from 'flarum/utils/Stream';\nimport Switch from 'flarum/components/Switch';\nimport withAttr from 'flarum/utils/withAttr';\n\nexport default class UploadPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n        // get the saved settings from the database\n        const settings = app.data.settings;\n\n        this.values = {};\n\n        // our package prefix (to be added to every field and checkbox in the setting table)\n        this.settingsPrefix = 'flagrow.ads';\n\n        this.positions = [\n            'under-header',\n            'between-posts',\n            'under-nav-items',\n        ];\n\n        this.properties = [\n            'adsense-client-id',\n        ];\n\n        this.settings = [\n    \t    'adsense-enabled',\n    \t    'start-from-post',\n            'between-n-posts',\n            'header-only-frontpage'\n        ];\n\n        // bind the values of the fields and checkboxes to the getter/setter functions\n        this.positions.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n        \n        this.properties.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n\n        this.settings.forEach((key) => (this.values[key] = Stream(Number(settings[this.addPrefix(key)]))));\n\n    }\n\n    /**\n     * Show the actual ImageUploadPage.\n     *\n     * @returns {*}\n     */\n    content() {\n\n        return [\n            m('div', {className: 'AdsPage'}, [\n                m('div', { className: 'container' }, [\n                    m('form', {onsubmit: this.onsubmit.bind(this)},\n                        m('h3', app.translator.trans('flagrow-ads.admin.settings.adsense-title')),\n\n                        m('fieldset', {className: 'AdsPage-settings'}, [\n                            Switch.component(\n                                {\n                                    state: this.values['adsense-enabled']() || false,\n                                    onchange: this.values['adsense-enabled'],\n                                },\n                                app.translator.trans('flagrow-ads.admin.settings.adsense-enable')\n                            ),\n                        ]),\n\n                        (this.values['adsense-enabled']() > 0 ? [\n                            m('fieldset', {className: 'AdsPage-settings'},  [\n                                m('label', app.translator.trans('flagrow-ads.admin.settings.adsense-client-id')),\n                                m('input.FormControl', {\n                                    placeholder: 'pub-XXXXXXXXXXXXXXXX',\n                                    value: this.values['adsense-client-id']() || '',\n                                    oninput: withAttr('value', this.values['adsense-client-id']),\n                                }),\n                            ]),\n                        ] : null),\n\n                        m('h3', app.translator.trans('flagrow-ads.admin.settings.position-title')),\n\n                        m('fieldset', {className: 'AdsPage-settings'}, [\n                            m('label', {}, app.translator.trans('flagrow-ads.admin.settings.start-from-post')),\n                            m('input.FormControl', {\n                                type: 'number',\n                                value: this.values['start-from-post']() || 1,\n                                oninput: withAttr('value', this.values['start-from-post'])\n                            })\n                        ]),\n\n                        m('fieldset', {className: 'AdsPage-settings'}, [\n                            m('label', {}, app.translator.trans('flagrow-ads.admin.settings.between-n-posts')),\n                            m('input.FormControl', {\n                                type: 'number',\n                                value: this.values['between-n-posts']() || 5,\n                                oninput: withAttr('value', this.values['between-n-posts'])\n                            })\n                        ]),\n\n                        this.positions.map(position => {\n                            return m('fieldset', {className: 'AdsPage-' + position}, [\n                                m('label', {}, app.translator.trans('flagrow-ads.admin.positions.' + position + '.title')),\n                                m('textarea.FormControl', {\n                                    value: this.values[position]() || null,\n                                    placeholder: app.translator.trans('flagrow-ads.admin.positions.' + position + '.placeholder'),\n                                    oninput: withAttr('value', this.values[position])\n                                })\n                            ])\n                        }),\n\n                        m('fieldset', {className: 'AdsPage-settings'}, [\n                            Switch.component(\n                                {\n                                    state: this.values['header-only-frontpage']() || false,\n                                    onchange: this.values['header-only-frontpage'],\n                                },\n                                app.translator.trans('flagrow-ads.admin.settings.header-only-frontpage')\n                            ),\n                        ]),\n\n                        Button.component({\n                            type: 'submit',\n                            className: 'Button Button--primary',\n                            disabled: !this.changed()\n                        }, app.translator.trans('flagrow-ads.admin.buttons.save')),\n                    ),\n                ]),\n            ])\n        ];\n    }\n\n    /**\n     * Checks if the values of the fields and checkboxes are different from\n     * the ones stored in the database\n     *\n     * @returns boolean\n     */\n    changed() {\n        const positionsChecked = this.positions.some(key => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        const propertiesChecked = this.properties.some(key => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        const settingsChecked = this.settings.some(key => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        return positionsChecked || settingsChecked || propertiesChecked;\n    }\n\n    /**\n     * Saves the settings to the database and redraw the page\n     *\n     * @param e\n     */\n    onsubmit(e) {\n        // prevent the usual form submit behaviour\n        e.preventDefault();\n\n\n        // if the page is already saving, do nothing\n        if (this.loading) return;\n\n        // prevents multiple savings\n        this.loading = true;\n\n        // remove previous success popup\n        app.alerts.dismiss(this.successAlert);\n\n        const settings = {};\n\n        // gets all the values from the form\n        this.positions.forEach(key => settings[this.addPrefix(key)] = this.values[key]());\n        this.properties.forEach(key => settings[this.addPrefix(key)] = this.values[key]());\n        this.settings.forEach(key => settings[this.addPrefix(key)] = this.values[key]());\n\n        // actually saves everything in the database\n        saveSettings(settings)\n            .then(() => {\n                // on success, show popup\n                app.alerts.show({ type: 'success' }, app.translator.trans('core.admin.settings.saved_message'));\n            })\n            .catch(() => {\n            })\n            .then(() => {\n                // return to the initial state and redraw the page\n                this.loading = false;\n                window.location.reload();\n            });\n    }\n\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import app from \"flarum/app\";\nimport AdsPage from \"./components/AdsPage\";\n\napp.initializers.add('insegreto/ads', () => {\n    app.extensionData\n        .for(\"insegreto-ads\")\n        .registerPage(AdsPage);\n});\n"],"sourceRoot":""}